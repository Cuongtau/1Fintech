<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountHolder" xml:space="preserve">
    <value>Account Holder</value>
  </data>
  <data name="ATMCardNumber" xml:space="preserve">
    <value>ATM Card Number</value>
  </data>
  <data name="btnPayment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="Fee" xml:space="preserve">
    <value>Fee</value>
  </data>
  <data name="OnlineBankingTitle" xml:space="preserve">
    <value>Online Banking</value>
  </data>
  <data name="PaymentInfo" xml:space="preserve">
    <value>Payment information</value>
  </data>
  <data name="RegistrationMonth" xml:space="preserve">
    <value>Registration Month</value>
  </data>
  <data name="RegistrationYear" xml:space="preserve">
    <value>Registration Year</value>
  </data>
  <data name="DateValidFrom" xml:space="preserve">
    <value>Valid From (Month/Year. mm/yyyy)</value>
  </data>
  <data name="UnknowBank" xml:space="preserve">
    <value>Unidentifiable payment bank</value>
  </data>
  <data name="ValidateAccHolder" xml:space="preserve">
    <value>Please enter account holder</value>
  </data>
  <data name="ValidateAccHolderCharacters" xml:space="preserve">
    <value>Name of card holder may not enter special characters</value>
  </data>
  <data name="ValidateAccType" xml:space="preserve">
    <value>Please select the type of authentication</value>
  </data>
  <data name="ValidateCardNumber" xml:space="preserve">
    <value>Please enter your card number</value>
  </data>
  <data name="ValidateCustomCode" xml:space="preserve">
    <value>Please enter customer code</value>
  </data>
  <data name="ValidateCustomCodeCharacters" xml:space="preserve">
    <value>Customer code may not enter special characters</value>
  </data>
  <data name="ValidateCustomCodeSize" xml:space="preserve">
    <value>Customer code can't exceed 30 characters</value>
  </data>
  <data name="ValidateNumber" xml:space="preserve">
    <value>data fields is number</value>
  </data>
  <data name="ValidateRegisterDate" xml:space="preserve">
    <value>Please select date open card</value>
  </data>
  <data name="ValidateRegisterDateSize" xml:space="preserve">
    <value>Invalid opening day card . Opening day card format ( MM/YYYY )</value>
  </data>
  <data name="ValidateSize" xml:space="preserve">
    <value>Smallest data field 6 characters and a maximum of 30 characters</value>
  </data>
  <data name="RegistrationDate" xml:space="preserve">
    <value>Registration Date</value>
  </data>
  <data name="BankAccInActive" xml:space="preserve">
    <value>Bank account not active</value>
  </data>
  <data name="BankAccNotAlowedPayment" xml:space="preserve">
    <value>Account is not allowed to pay. Please contact BIDV TTCSKH BTC at telephone number 19009247 for assistance.</value>
  </data>
  <data name="BankAmountOverLitmitDay" xml:space="preserve">
    <value>The total amount of payment at the bank exceeds the daily limit</value>
  </data>
  <data name="BankNotEnoughBalance" xml:space="preserve">
    <value>The total number of bank transactions exceeds the daily limit</value>
  </data>
  <data name="BankNotRegisterService" xml:space="preserve">
    <value>Customers have not registered for services at the bank</value>
  </data>
  <data name="BankTransOverLimitDay" xml:space="preserve">
    <value>Tổng số giao dịch tại ngân hàng vượt quá hạn mức ngày</value>
  </data>
  <data name="CardInfoInputInvalid" xml:space="preserve">
    <value>Wrong entry of card information. You are re-entered again 2 more times!</value>
  </data>
  <data name="CardInfoInputInvalid1" xml:space="preserve">
    <value>Wrong entry of card information. You are re-entered again!</value>
  </data>
  <data name="CardInfoInvalid" xml:space="preserve">
    <value>Invalid payment card information</value>
  </data>
  <data name="CardIsLocked" xml:space="preserve">
    <value>Card not enough condition for transaction !</value>
  </data>
  <data name="OTPCode" xml:space="preserve">
    <value>Enter OTP code</value>
  </data>
</root>